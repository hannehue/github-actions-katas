name: Main workflow
on: push

env:
  docker_username: ${{github.actor}}
  docker_password: ${{secrets.GITHUB_TOKEN}}
  GIT_COMMIT: ${{github.sha}}

jobs:
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
      - name: Build app
        run: ci/build-app.sh
      - name: Run unit tests
        run: ci/unit-test-app.sh 
      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
  

  Linting:
    runs-on: ubuntu-latest
    needs: [Build]
    
    steps:  
    - name: Download app
      uses: actions/download-artifact@v4
      with: 
        name: code
        path: .
    
    - name: Run linters
      uses: super-linter/super-linter/slim@v5
      env: 
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        DISABLE_ERRORS: true

  Docker-Image:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions: 
      packages: write

    steps:
    - name: Download app
      uses: actions/download-artifact@v4
      with: 
        name: code
        path: .
    - name: login to docker
      uses: docker/login-action@v3
      with: 
        registry: ghcr.io
        username: ${{ env.docker_username }}
        password: ${{env.docker_password}}
    - name: build and push docker
      uses: docker/build-push-action@v5
      with:
        context: app
        push: true
        tags: ghcr.io/${{env.docker_username}}/micronaut-app:1.0-${{env.GIT_COMMIT}},ghcr.io/${{env.docker_username}}/micronaut-app:latest
    

  Compnonet-test:
    runs-on: ubuntu-latest
    needs: [Docker-Image]
    
    steps:
    - name: Download app
      uses: actions/download-artifact@v4
      with: 
        name: code
        path: .
    - name: Execure component test
      run: bash ci/component-test.sh
    
  Performance-test:
    runs-on: ubuntu-latest
    needs: [Docker-Image]
    steps:
    - name: Download app
      uses: actions/download-artifact@v4
      with: 
        name: code
        path: .
    - name: Execure component test
      run: bash ci/performance-test.sh
        
